/*
 * 3DS OUTSCALE API
 *
 * Welcome to the OUTSCALE API documentation.<br /><br />  The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.16
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package osc

import (
	"encoding/json"
)

// SourceSecurityGroup Information about the source security group of the load balancer, which you can use as part of your inbound rules for your registered VMs.<br /> To only allow traffic from load balancers, add a security group rule that specifies this source security group as the inbound source.
type SourceSecurityGroup struct {
	// The account ID of the owner of the security group.
	SecurityGroupAccountId *string `json:"SecurityGroupAccountId,omitempty"`
	// The name of the security group.
	SecurityGroupName *string `json:"SecurityGroupName,omitempty"`
}

// NewSourceSecurityGroup instantiates a new SourceSecurityGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSourceSecurityGroup() *SourceSecurityGroup {
	this := SourceSecurityGroup{}
	return &this
}

// NewSourceSecurityGroupWithDefaults instantiates a new SourceSecurityGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSourceSecurityGroupWithDefaults() *SourceSecurityGroup {
	this := SourceSecurityGroup{}
	return &this
}

// GetSecurityGroupAccountId returns the SecurityGroupAccountId field value if set, zero value otherwise.
func (o *SourceSecurityGroup) GetSecurityGroupAccountId() string {
	if o == nil || o.SecurityGroupAccountId == nil {
		var ret string
		return ret
	}
	return *o.SecurityGroupAccountId
}

// GetSecurityGroupAccountIdOk returns a tuple with the SecurityGroupAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceSecurityGroup) GetSecurityGroupAccountIdOk() (*string, bool) {
	if o == nil || o.SecurityGroupAccountId == nil {
		return nil, false
	}
	return o.SecurityGroupAccountId, true
}

// HasSecurityGroupAccountId returns a boolean if a field has been set.
func (o *SourceSecurityGroup) HasSecurityGroupAccountId() bool {
	if o != nil && o.SecurityGroupAccountId != nil {
		return true
	}

	return false
}

// SetSecurityGroupAccountId gets a reference to the given string and assigns it to the SecurityGroupAccountId field.
func (o *SourceSecurityGroup) SetSecurityGroupAccountId(v string) {
	o.SecurityGroupAccountId = &v
}

// GetSecurityGroupName returns the SecurityGroupName field value if set, zero value otherwise.
func (o *SourceSecurityGroup) GetSecurityGroupName() string {
	if o == nil || o.SecurityGroupName == nil {
		var ret string
		return ret
	}
	return *o.SecurityGroupName
}

// GetSecurityGroupNameOk returns a tuple with the SecurityGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceSecurityGroup) GetSecurityGroupNameOk() (*string, bool) {
	if o == nil || o.SecurityGroupName == nil {
		return nil, false
	}
	return o.SecurityGroupName, true
}

// HasSecurityGroupName returns a boolean if a field has been set.
func (o *SourceSecurityGroup) HasSecurityGroupName() bool {
	if o != nil && o.SecurityGroupName != nil {
		return true
	}

	return false
}

// SetSecurityGroupName gets a reference to the given string and assigns it to the SecurityGroupName field.
func (o *SourceSecurityGroup) SetSecurityGroupName(v string) {
	o.SecurityGroupName = &v
}

func (o SourceSecurityGroup) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SecurityGroupAccountId != nil {
		toSerialize["SecurityGroupAccountId"] = o.SecurityGroupAccountId
	}
	if o.SecurityGroupName != nil {
		toSerialize["SecurityGroupName"] = o.SecurityGroupName
	}
	return json.Marshal(toSerialize)
}

type NullableSourceSecurityGroup struct {
	value *SourceSecurityGroup
	isSet bool
}

func (v NullableSourceSecurityGroup) Get() *SourceSecurityGroup {
	return v.value
}

func (v *NullableSourceSecurityGroup) Set(val *SourceSecurityGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableSourceSecurityGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableSourceSecurityGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSourceSecurityGroup(val *SourceSecurityGroup) *NullableSourceSecurityGroup {
	return &NullableSourceSecurityGroup{value: val, isSet: true}
}

func (v NullableSourceSecurityGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSourceSecurityGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
