/*
 * 3DS OUTSCALE API
 *
 * Welcome to the OUTSCALE API documentation.<br /><br />  The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.16
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package osc

import (
	"encoding/json"
)

// CreateAccessKeyResponse struct for CreateAccessKeyResponse
type CreateAccessKeyResponse struct {
	AccessKey       *AccessKeySecretKey `json:"AccessKey,omitempty"`
	ResponseContext *ResponseContext    `json:"ResponseContext,omitempty"`
}

// NewCreateAccessKeyResponse instantiates a new CreateAccessKeyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAccessKeyResponse() *CreateAccessKeyResponse {
	this := CreateAccessKeyResponse{}
	return &this
}

// NewCreateAccessKeyResponseWithDefaults instantiates a new CreateAccessKeyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAccessKeyResponseWithDefaults() *CreateAccessKeyResponse {
	this := CreateAccessKeyResponse{}
	return &this
}

// GetAccessKey returns the AccessKey field value if set, zero value otherwise.
func (o *CreateAccessKeyResponse) GetAccessKey() AccessKeySecretKey {
	if o == nil || o.AccessKey == nil {
		var ret AccessKeySecretKey
		return ret
	}
	return *o.AccessKey
}

// GetAccessKeyOk returns a tuple with the AccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAccessKeyResponse) GetAccessKeyOk() (*AccessKeySecretKey, bool) {
	if o == nil || o.AccessKey == nil {
		return nil, false
	}
	return o.AccessKey, true
}

// HasAccessKey returns a boolean if a field has been set.
func (o *CreateAccessKeyResponse) HasAccessKey() bool {
	if o != nil && o.AccessKey != nil {
		return true
	}

	return false
}

// SetAccessKey gets a reference to the given AccessKeySecretKey and assigns it to the AccessKey field.
func (o *CreateAccessKeyResponse) SetAccessKey(v AccessKeySecretKey) {
	o.AccessKey = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *CreateAccessKeyResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAccessKeyResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *CreateAccessKeyResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *CreateAccessKeyResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o CreateAccessKeyResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessKey != nil {
		toSerialize["AccessKey"] = o.AccessKey
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableCreateAccessKeyResponse struct {
	value *CreateAccessKeyResponse
	isSet bool
}

func (v NullableCreateAccessKeyResponse) Get() *CreateAccessKeyResponse {
	return v.value
}

func (v *NullableCreateAccessKeyResponse) Set(val *CreateAccessKeyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAccessKeyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAccessKeyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAccessKeyResponse(val *CreateAccessKeyResponse) *NullableCreateAccessKeyResponse {
	return &NullableCreateAccessKeyResponse{value: val, isSet: true}
}

func (v NullableCreateAccessKeyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAccessKeyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
