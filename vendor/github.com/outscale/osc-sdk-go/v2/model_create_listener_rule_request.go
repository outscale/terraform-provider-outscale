/*
 * 3DS OUTSCALE API
 *
 * Welcome to the OUTSCALE API documentation.<br /><br />  The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.16
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package osc

import (
	"encoding/json"
)

// CreateListenerRuleRequest struct for CreateListenerRuleRequest
type CreateListenerRuleRequest struct {
	// If true, checks whether you have the required permissions to perform the action.
	DryRun       *bool                   `json:"DryRun,omitempty"`
	Listener     LoadBalancerLight       `json:"Listener"`
	ListenerRule ListenerRuleForCreation `json:"ListenerRule"`
	// The IDs of the backend VMs.
	VmIds []string `json:"VmIds"`
}

// NewCreateListenerRuleRequest instantiates a new CreateListenerRuleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateListenerRuleRequest(listener LoadBalancerLight, listenerRule ListenerRuleForCreation, vmIds []string) *CreateListenerRuleRequest {
	this := CreateListenerRuleRequest{}
	this.Listener = listener
	this.ListenerRule = listenerRule
	this.VmIds = vmIds
	return &this
}

// NewCreateListenerRuleRequestWithDefaults instantiates a new CreateListenerRuleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateListenerRuleRequestWithDefaults() *CreateListenerRuleRequest {
	this := CreateListenerRuleRequest{}
	return &this
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *CreateListenerRuleRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateListenerRuleRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *CreateListenerRuleRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *CreateListenerRuleRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetListener returns the Listener field value
func (o *CreateListenerRuleRequest) GetListener() LoadBalancerLight {
	if o == nil {
		var ret LoadBalancerLight
		return ret
	}

	return o.Listener
}

// GetListenerOk returns a tuple with the Listener field value
// and a boolean to check if the value has been set.
func (o *CreateListenerRuleRequest) GetListenerOk() (*LoadBalancerLight, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Listener, true
}

// SetListener sets field value
func (o *CreateListenerRuleRequest) SetListener(v LoadBalancerLight) {
	o.Listener = v
}

// GetListenerRule returns the ListenerRule field value
func (o *CreateListenerRuleRequest) GetListenerRule() ListenerRuleForCreation {
	if o == nil {
		var ret ListenerRuleForCreation
		return ret
	}

	return o.ListenerRule
}

// GetListenerRuleOk returns a tuple with the ListenerRule field value
// and a boolean to check if the value has been set.
func (o *CreateListenerRuleRequest) GetListenerRuleOk() (*ListenerRuleForCreation, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ListenerRule, true
}

// SetListenerRule sets field value
func (o *CreateListenerRuleRequest) SetListenerRule(v ListenerRuleForCreation) {
	o.ListenerRule = v
}

// GetVmIds returns the VmIds field value
func (o *CreateListenerRuleRequest) GetVmIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.VmIds
}

// GetVmIdsOk returns a tuple with the VmIds field value
// and a boolean to check if the value has been set.
func (o *CreateListenerRuleRequest) GetVmIdsOk() (*[]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VmIds, true
}

// SetVmIds sets field value
func (o *CreateListenerRuleRequest) SetVmIds(v []string) {
	o.VmIds = v
}

func (o CreateListenerRuleRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["Listener"] = o.Listener
	}
	if true {
		toSerialize["ListenerRule"] = o.ListenerRule
	}
	if true {
		toSerialize["VmIds"] = o.VmIds
	}
	return json.Marshal(toSerialize)
}

type NullableCreateListenerRuleRequest struct {
	value *CreateListenerRuleRequest
	isSet bool
}

func (v NullableCreateListenerRuleRequest) Get() *CreateListenerRuleRequest {
	return v.value
}

func (v *NullableCreateListenerRuleRequest) Set(val *CreateListenerRuleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateListenerRuleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateListenerRuleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateListenerRuleRequest(val *CreateListenerRuleRequest) *NullableCreateListenerRuleRequest {
	return &NullableCreateListenerRuleRequest{value: val, isSet: true}
}

func (v NullableCreateListenerRuleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateListenerRuleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
