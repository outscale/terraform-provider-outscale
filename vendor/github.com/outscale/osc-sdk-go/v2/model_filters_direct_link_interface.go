/*
 * 3DS OUTSCALE API
 *
 * Welcome to the OUTSCALE API documentation.<br /><br />  The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.16
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package osc

import (
	"encoding/json"
)

// FiltersDirectLinkInterface One or more filters.
type FiltersDirectLinkInterface struct {
	// The IDs of the DirectLinks.
	DirectLinkIds *[]string `json:"DirectLinkIds,omitempty"`
	// The IDs of the DirectLink interfaces.
	DirectLinkInterfaceIds *[]string `json:"DirectLinkInterfaceIds,omitempty"`
}

// NewFiltersDirectLinkInterface instantiates a new FiltersDirectLinkInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiltersDirectLinkInterface() *FiltersDirectLinkInterface {
	this := FiltersDirectLinkInterface{}
	return &this
}

// NewFiltersDirectLinkInterfaceWithDefaults instantiates a new FiltersDirectLinkInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiltersDirectLinkInterfaceWithDefaults() *FiltersDirectLinkInterface {
	this := FiltersDirectLinkInterface{}
	return &this
}

// GetDirectLinkIds returns the DirectLinkIds field value if set, zero value otherwise.
func (o *FiltersDirectLinkInterface) GetDirectLinkIds() []string {
	if o == nil || o.DirectLinkIds == nil {
		var ret []string
		return ret
	}
	return *o.DirectLinkIds
}

// GetDirectLinkIdsOk returns a tuple with the DirectLinkIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersDirectLinkInterface) GetDirectLinkIdsOk() (*[]string, bool) {
	if o == nil || o.DirectLinkIds == nil {
		return nil, false
	}
	return o.DirectLinkIds, true
}

// HasDirectLinkIds returns a boolean if a field has been set.
func (o *FiltersDirectLinkInterface) HasDirectLinkIds() bool {
	if o != nil && o.DirectLinkIds != nil {
		return true
	}

	return false
}

// SetDirectLinkIds gets a reference to the given []string and assigns it to the DirectLinkIds field.
func (o *FiltersDirectLinkInterface) SetDirectLinkIds(v []string) {
	o.DirectLinkIds = &v
}

// GetDirectLinkInterfaceIds returns the DirectLinkInterfaceIds field value if set, zero value otherwise.
func (o *FiltersDirectLinkInterface) GetDirectLinkInterfaceIds() []string {
	if o == nil || o.DirectLinkInterfaceIds == nil {
		var ret []string
		return ret
	}
	return *o.DirectLinkInterfaceIds
}

// GetDirectLinkInterfaceIdsOk returns a tuple with the DirectLinkInterfaceIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersDirectLinkInterface) GetDirectLinkInterfaceIdsOk() (*[]string, bool) {
	if o == nil || o.DirectLinkInterfaceIds == nil {
		return nil, false
	}
	return o.DirectLinkInterfaceIds, true
}

// HasDirectLinkInterfaceIds returns a boolean if a field has been set.
func (o *FiltersDirectLinkInterface) HasDirectLinkInterfaceIds() bool {
	if o != nil && o.DirectLinkInterfaceIds != nil {
		return true
	}

	return false
}

// SetDirectLinkInterfaceIds gets a reference to the given []string and assigns it to the DirectLinkInterfaceIds field.
func (o *FiltersDirectLinkInterface) SetDirectLinkInterfaceIds(v []string) {
	o.DirectLinkInterfaceIds = &v
}

func (o FiltersDirectLinkInterface) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DirectLinkIds != nil {
		toSerialize["DirectLinkIds"] = o.DirectLinkIds
	}
	if o.DirectLinkInterfaceIds != nil {
		toSerialize["DirectLinkInterfaceIds"] = o.DirectLinkInterfaceIds
	}
	return json.Marshal(toSerialize)
}

type NullableFiltersDirectLinkInterface struct {
	value *FiltersDirectLinkInterface
	isSet bool
}

func (v NullableFiltersDirectLinkInterface) Get() *FiltersDirectLinkInterface {
	return v.value
}

func (v *NullableFiltersDirectLinkInterface) Set(val *FiltersDirectLinkInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableFiltersDirectLinkInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableFiltersDirectLinkInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiltersDirectLinkInterface(val *FiltersDirectLinkInterface) *NullableFiltersDirectLinkInterface {
	return &NullableFiltersDirectLinkInterface{value: val, isSet: true}
}

func (v NullableFiltersDirectLinkInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiltersDirectLinkInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
