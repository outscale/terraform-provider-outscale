name: Nets integration tests splitted

on:
    pull_request:
        branches:
            - master
        paths:
            - "**.go"
            - "tests/**"
            - "scripts/integration.sh"
            - "GNUmakefile"
            - "!**_test.go"
    workflow_dispatch:

jobs:
    setup:
        environment: test-us-east-2
        runs-on: [self-hosted, linux, us-east-2]
        outputs:
            folders: ${{ steps.list_test_folders.outputs.folders }}
        steps:
            - uses: actions/checkout@v4
              with:
                  repository: ${{ github.event.pull_request.head.repo.full_name }}
                  ref: ${{ github.event.pull_request.head.ref }}
            - name: List test folders
              id: list_test_folders
              run: |
                  folders=$(ls -1 tests/qa_provider_oapi/data/nets/ | jq -R -s -c 'split("\n") | map(select(. != ""))')
                  echo "folders=$folders" >> "$GITHUB_OUTPUT"
              shell: bash
            - name: Debug
              run: |
                  echo "${{ steps.list_test_folders.outputs.folders }}"
              shell: bash

    run_tests:
        needs: setup
        environment: test-us-east-2
        runs-on: [self-hosted, linux, us-east-2]
        strategy:
            matrix:
                folder: ${{ fromJson(needs.setup.outputs.folders) }}
        steps:
            - uses: actions/checkout@v4
              with:
                  repository: ${{ github.event.pull_request.head.repo.full_name }}
                  ref: ${{ github.event.pull_request.head.ref }}
            - name: Set up Go
              uses: actions/setup-go@v5
              with:
                  go-version-file: "./go.mod"
                  cache-dependency-path: go.sum
            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.10"
                  cache: "pip"
            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v3
              with:
                  terraform_version: 1.9.8
                  terraform_wrapper: false
            - name: Build go test
              run: make test
              env:
                  OUTSCALE_ACCESSKEYID: ${{ secrets.OSC_ACCESS_KEY }}
                  OUTSCALE_SECRETKEYID: ${{ secrets.OSC_SECRET_KEY }}
                  OUTSCALE_REGION: ${{ secrets.OSC_REGION }}
                  OUTSCALE_ACCOUNT: ${{ secrets.OSC_ACCOUNT_ID }}
                  OUTSCALE_IMAGEID: ${{ secrets.OUTSCALE_IMAGEID }}
            - name: Run ${{ matrix.folder }} integration tests
              run: make test-integration
              env:
                  OUTSCALE_ACCESSKEYID: ${{ secrets.OSC_ACCESS_KEY }}
                  OUTSCALE_SECRETKEYID: ${{ secrets.OSC_SECRET_KEY }}
                  OUTSCALE_REGION: ${{ secrets.OSC_REGION }}
                  OUTSCALE_ACCOUNT: ${{ secrets.OSC_ACCOUNT_ID }}
                  OUTSCALE_IMAGEID: ${{ secrets.OUTSCALE_IMAGEID }}
                  TF_VAR_image_id: ${{ secrets.OUTSCALE_IMAGEID }}
                  TF_VAR_region: ${{ secrets.OSC_REGION }}
                  TF_VAR_service_name: ${{ secrets.SERVICE_NAME }}
                  TF_VAR_account_id: ${{ secrets.OSC_ACCOUNT_ID }}
                  RUN_NETS_ONLY: ${{ secrets.RUN_NETS_ONLY }}
                  TEST_FOLDER: nets/${{ matrix.folder }}

    clean:
        environment: test-us-east-2
        runs-on: [self-hosted, linux, us-east-2]
        needs: [setup, run_tests]
        if: ${{ always() }}
        steps:
            - uses: outscale/frieza-github-actions/frieza-clean@master
              with:
                  access_key: ${{ secrets.OSC_ACCESS_KEY }}
                  secret_key: ${{ secrets.OSC_SECRET_KEY }}
                  region: ${{ secrets.OSC_REGION }}
